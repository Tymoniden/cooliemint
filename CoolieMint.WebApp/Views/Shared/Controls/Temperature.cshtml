@using WebControlCenter.Extensions
@model TemperatureControlModel

@Html.PartialSectionScripts(
    @<script>
    if (!ControlCenter.IsScriptRegistered("Temperature.js")) {
        ControlCenter.RegisterScript("Temperature.js");

        $("body").on("Mqtt:TemperatureAdapter",
            function (event, message) {
                var elements = $('[data-adapter-type="Mqtt:TemperatureAdapter"][data-adapter-identifier=' + message.identifier + ']');

                if (elements.length >= 1) {
                    $(elements).each(function (index, element) {
                        SetTemperature($(element), message.payload.temperature);
                    });
                }
            });

        function SetTemperature(element, temperature) {
            var minValue = parseFloat($(element).attr("data-min-value"));
            var maxValue = parseFloat($(element).attr("data-max-value"));

            displayTemperature = parseInt((temperature * 10) + "") / 10;
            temperature = minValue > temperature ? minValue : temperature;
            temperature = maxValue < temperature ? maxValue : temperature;

            var range = maxValue - minValue;
            var percentage = (temperature - minValue) / range * 100;
            drawCircle($(element).find("div.temp-control canvas"), percentage, displayTemperature + "°");
        }
    }

    </script>
)

<div data-adapter-type="@Html.Raw(Model.Adapter)" data-adapter-identifier="@Html.Raw(Model.Identifier)" data-min-value="@Html.Raw(Model.MinValue)" data-max-value="@Html.Raw(Model.MaxValue)">
    <div class="label @Html.Raw(Model.Alignment == ControlAlignment.Right ? "right" : "left")">@Html.Raw(Model.Title)</div>

    <div class="temp-control">
        <canvas height="120" width="120"></canvas>
    </div>
</div>